name: Build and publish

on: [workflow_dispatch]

env:
  PKGNAME: nody-greeter

jobs:
  # Lint changed templates.
  xlint:
    name: Lint templates
    runs-on: ubuntu-latest

    env:
      PATH: '/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/sbin:/usr/local/bin:/tmp/bin'
      XLINT: '1'
      LICENSE_LIST: common/travis/license.lst

    steps:
      - uses: actions/checkout@v2
      - name: Clone repo
        uses: actions/checkout@v2
        with:
          repository: void-linux/void-packages
          path: void-packages
          fetch-depth: 200
      - run: cd void-packages && git remote set-head origin --auto
      - name: Set template
        run: |
          mkdir -p "void-packages/srcpkgs/${PKGNAME}"
          cp template "void-packages/srcpkgs/${PKGNAME}"
      - name: Commit package
        run: |
          cd void-packages
          git config user.email "amyuki4@gmail.com"
          git config user.name "JezerBot"
          version=$(awk 'BEGIN {FS="="} /version=/ {print $2}' "srcpkgs/${PKGNAME}/template")
          git add "srcpkgs/${PKGNAME}"
          git commit -m "New package: ${PKGNAME}-${version}"
      - name: common/travis/changed_templates.sh
        run: |
          cd void-packages
          git remote -v
          git rev-list -1 --parents HEAD
          git branch -r
          common/travis/changed_templates.sh
      - name: common/travis/fetch-xbps.sh
        run: |
          cd void-packages
          common/travis/fetch-xbps.sh
      - name: common/travis/fetch-xtools.sh
        run: |
          cd void-packages
          common/travis/fetch-xtools.sh
      - name: common/travis/xlint.sh
        run: |
          cd void-packages
          common/travis/xlint.sh

  # Build changed packages.
  build:
    name: Build packages
    runs-on: ubuntu-latest

    container:
      image: 'ghcr.io/void-linux/void-buildroot-${{ matrix.config.libc }}:20240526R1'
      options: --platform ${{ matrix.config.platform }}
      env:
        PATH: '/usr/libexec/chroot-git:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/sbin:/usr/local/bin:/tmp/bin'
        ARCH: '${{ matrix.config.arch }}'
        BOOTSTRAP: '${{ matrix.config.host }}'
        TEST: '${{ matrix.config.test }}'
        HOSTREPO: /hostrepo

    strategy:
      fail-fast: false
      matrix:
        config:
          - { arch: x86_64,       host: x86_64,      libc: glibc, platform: linux/amd64, test: 1 }
          - { arch: i686,         host: i686,        libc: glibc, platform: linux/386,   test: 1 }
          - { arch: aarch64,      host: x86_64,      libc: glibc, platform: linux/amd64, test: 0 }
          - { arch: armv7l,       host: x86_64,      libc: glibc, platform: linux/amd64, test: 0 }
          # - { arch: x86_64-musl,  host: x86_64-musl, libc: musl,  platform: linux/amd64, test: 1 }
          # - { arch: armv6l-musl,  host: x86_64-musl, libc: musl,  platform: linux/amd64, test: 0 }
          # - { arch: aarch64-musl, host: x86_64-musl, libc: musl,  platform: linux/amd64, test: 0 }

    steps:
      - uses: actions/checkout@v1
      - name: Prepare container
        run: |
          # switch to repo-ci mirror
          mkdir -p /etc/xbps.d && cp /usr/share/xbps.d/*-repository-*.conf /etc/xbps.d/
          sed -i 's|repo-default|repo-ci|g' /etc/xbps.d/*-repository-*.conf
          # Sync and upgrade once, assume error comes from xbps update
          xbps-install -Syu || xbps-install -yu xbps
          # Upgrade again (in case there was a xbps update)
          xbps-install -yu
          xbps-install -y git
      - name: Clone repo
        env:
          PATH: '/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/sbin:/usr/local/bin:/tmp/bin'
          REPOSITORY: void-linux/void-packages
          SERVER_URL: ${{ github.server_url }}
        run: |
          git clone --progress --no-checkout --filter=tree:0 "${SERVER_URL}/${REPOSITORY}" "void-packages"
          git config --global --add gc.auto 0
          git config --global --add safe.directory "void-packages"
          git config --global --add safe.directory "$PWD"

          cd "void-packages"
          git fetch --prune --progress --filter=tree:0 origin
          git checkout --progress --force master
      - run: |
          cd void-packages
          git remote set-head origin --auto
      - name: Set template
        run: |
          mkdir -p "void-packages/srcpkgs/${PKGNAME}"
          cp template "void-packages/srcpkgs/${PKGNAME}"
      - name: Commit package
        run: |
          cd void-packages
          git config user.email "amyuki4@gmail.com"
          git config user.name "JezerBot"
          version=$(awk 'BEGIN {FS="="} /version=/ {print $2}' "srcpkgs/${PKGNAME}/template")
          echo "package_version=${version}" >> $GITHUB_ENV
          git add "srcpkgs/${PKGNAME}"
          git commit -m "New package: ${PKGNAME}-${version}"
      - name: Create hostrepo and prepare masterdir
        run: |
          ln -s "$(pwd)/void-packages" /hostrepo &&
          cd void-packages &&
          common/travis/set_mirror.sh &&
          common/travis/prepare.sh &&
          common/travis/fetch-xtools.sh
      - name: Patch checksum validation
        run: |
          patch -u "void-packages/common/hooks/do-fetch/00-distfiles.sh" -i 00-distfiles.sh.patch
      - name: common/travis/changed_templates.sh
        run: |
          cd void-packages
          common/travis/changed_templates.sh

      - name: Build and check packages
        run: |
          (
          here="$(pwd)/void-packages"
          cd /
          "$here/common/travis/build.sh" "$BOOTSTRAP" "$ARCH" "$TEST"
          )
      - name: Show files
        run: |
          (
          here="$(pwd)/void-packages"
          cd /
          "$here/common/travis/show_files.sh" "$BOOTSTRAP" "$ARCH"
          )
      - name: Verify repository state
        run: |
          (
          here="$(pwd)/void-packages"
          cd /
          "$here/common/travis/check-install.sh" "$BOOTSTRAP" "$ARCH"
          )
      - name: Some checks
        run: |
          echo "$(realpath $HOME/hostdir/binpkgs)"
          echo "\$ ls \$HOME/hostdir/binpkgs"
          ls $HOME/hostdir/binpkgs
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.PKGNAME }}-${{ env.package_version }}-${{ matrix.config.arch }}
          path: ~/hostdir/binpkgs/*.xbps
          retention-days: 7

